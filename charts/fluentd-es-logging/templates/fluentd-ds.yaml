apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    k8s-app: fluentd
    kubernetes.io/cluster-service: "true"
  name: {{ template "fullname" . }}
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        k8s-app: fluentd
        kubernetes.io/cluster-service: "true"
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
  {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
  {{- end }}
      containers:
      - name: fluentd
        image: {{ .Values.image }}:{{ .Values.tag }}
        env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        resources:
{{ toYaml .Values.resources | indent 12 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: libsystemddir
          mountPath: /host/lib
          readOnly: true
        - name: config-volume
          mountPath: /etc/fluent/config.d
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      # It is needed to copy systemd library to decompress journals
      - name: libsystemddir
        hostPath:
          path: /usr/lib64
      - name: config-volume
        configMap:
          name: {{ template "fullname" . }}-fluentd-config
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "fullname" . }}-fluentd-config
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
data:
{{ (.Files.Glob "files/fluentd-confg/*.conf").AsConfig | indent 2 }}
# Ignore fluentd logs to prevent infinite loop.
  output.conf: |
    <match kubernetes.var.log.containers.fluentd-**>
      @type null
    </match>
    # Handle multi-line java stacktraces, delimited by the logging level.
    <filter **>
      @type concat
      key log
      multiline_start_regexp /^.*(TRACE|DEBUG|INFO|WARN|ERROR|FATAL).*$/
      flush_interval 10
      use_first_timestamp true
    </filter>
    # Enriches records with Kubernetes metadata
    <filter kubernetes.**>
      @type kubernetes_metadata
    </filter>
    # Send to ElasticSearch
    <match **>
       @type elasticsearch
       @log_level info
       include_tag_key true
       {{ if .Values.elasticsearch.host }}
       host {{ .Values.elasticsearch.host }}
       {{- else -}}
       host {{ printf "%s-elasticsearch-client" .Release.Name | trunc 63 }}
       {{ end }}
       {{ if .Values.elasticsearch.port }}
       port {{ .Values.elasticsearch.port }}
       {{- else -}}
       port 9200
       {{ end }}
       logstash_format true
       # Set the chunk limits.
       buffer_chunk_limit 2M
       buffer_queue_limit 8
       flush_interval 5s
       # Never wait longer than 5 minutes between retries.
       max_retry_wait 30
       # Disable the limit on the number of retries (retry forever).
       disable_retry_limit
       # Use multiple threads for processing.
       num_threads 2
    </match>
