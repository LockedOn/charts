apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ printf "cm-kf-%s" .Release.Name | trunc 24 }}"
  annotations:
    helm.sh/created: {{.Release.Time.Seconds | quote }}
  labels:
    heritage: {{.Release.Service | quote }}
    release: {{.Release.Name | quote }}
    chart: "{{.Chart.Name}}-{{.Chart.Version}}"
    app: {{.Release.Name | quote }}
    component: "{{ printf "%s-kafka" .Release.Name | trunc 24 }}"
    role: kafka
data:
  server.properties: |
    broker.id=0
    delete.topic.enable={{ .Values.TopicDeleteEnabled }}
    auto.create.topics.enable={{ .Values.AutoCreateTopicsEnable }}
    unclean.leader.election.enable={{ .Values.UncleanLeaderElection }}

    num.network.threads=3
    num.io.threads=8
    socket.send.buffer.bytes=102400
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    log.dirs={{ .Values.DataDirectory }}/{{ .Values.DataDirectoryName | default "topics"}}
    num.partitions=1
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=1
    transaction.state.log.replication.factor=1
    transaction.state.log.min.isr=1
    log.retention.hours=168
    log.segment.bytes=1073741824
    log.retention.check.interval.ms={{ .Values.LogRetentionCheckIntervalMs }}
    group.initial.rebalance.delay.ms=0
    zookeeper.connect=zookeeper:2181
    zookeeper.connection.timeout.ms=6000
